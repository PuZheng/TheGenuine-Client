import groovy.json.JsonSlurper
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

apply plugin: 'android'

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}



android {
    signingConfigs {
        config {
            keyAlias 'lejiankey'
            keyPassword 'l19820211'
            storeFile file('/home/xc/keystores/mykey.jks')
            storePassword '13321244'
        }
    }
    compileSdkVersion 19
    buildToolsVersion '19.1.0'
    defaultConfig {
        applicationId "com.puzheng.lejian"
        minSdkVersion 16
        targetSdkVersion 16
    }
    lintOptions {
        disable 'MissingTranslation'
    }
    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
    }

    buildTypes {
        def inputFile = file("./src/main/res/raw/config.json")
        def config = new JsonSlurper().parseText(inputFile.text)
        debug {
            manifestPlaceholders = [AMAP_KEY: config.apiKey]
        }
        release {
            manifestPlaceholders = [AMAP_KEY: config.releaseAPIKey]
        }
    }
}

dependencies {
    compile 'com.google.android.gms:play-services:4.0.30'
    compile 'com.android.support:support-v4:19.0.+'
    compile 'com.android.support:appcompat-v7:19.0.+'
    compile 'com.google.code.gson:gson:2.3'
    compile 'com.google.zxing:core:3.1.0'
    compile 'com.jakewharton:disklrucache:2.0.2'
    compile 'com.github.orhanobut:logger:1.12'
    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta3'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta3'
    compile 'com.github.bumptech.glide:glide:3.6.1'
    compile fileTree(include: '*.jar', dir: 'libs')
    compile project(':MyLibrary')
    compile project(':deferred')
    compile project(':humanize')
    compile files('libs/AMap_Location_v2.3.0_20160112.jar')
    compile 'com.github.blocoio:faker:1.1.0'
}

preBuild.doFirst {
    if (!file("./src/main/res/raw/config.json").exists()) {
        throw new GradleException('you must provide a config file!');
    }

}



